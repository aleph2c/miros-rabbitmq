<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>8</zoom_level>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>200</x>
      <y>280</y>
      <w>24</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=()-[v]</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1272</x>
      <y>320</y>
      <w>160</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>symbol=component
Event Processor</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1344</x>
      <y>352</y>
      <w>40</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>lt=[^]-(</panel_attributes>
    <additional_attributes>20.0;10.0;20.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1264</x>
      <y>240</y>
      <w>176</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>*Recon*
--
my.address
my.addresses
other.addresses


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>1080</x>
      <y>432</y>
      <w>720</w>
      <h>648</h>
    </coordinates>
    <panel_attributes>*private_search*
--
entry /
exit / 

valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>1168</x>
      <y>480</y>
      <w>592</w>
      <h>264</h>
    </coordinates>
    <panel_attributes>*lan_recon*
--

valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>1224</x>
      <y>544</y>
      <w>184</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>*fill_arp_table*
--
entry /
	chart.post_fifo(Event(
	  signal=signals.ARP_TIME_OUT), 
	  times=1,
	  period=2.0,
	  deferred=True)
exit / 
	chart.cancel_events(
	  signals.ARP_FILL_TIME_OUT)
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>1544</x>
      <y>544</y>
      <w>192</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>*identify_all_ip_addresses*
--
entry /
	chart.this.address = ..
	chart.this.addresses = ..
	chart.other.addresses = .. # apppend
	chart.post_fifo(
	  Event(signal=signals.RECON))
	

valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>128</x>
      <y>312</y>
      <w>664</w>
      <h>584</h>
    </coordinates>
    <panel_attributes>*search*
--
entry /
	chart.producer.thread = 
	  PikaTopicPublisher(..)

    
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>304</x>
      <y>352</y>
      <w>320</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>*post_and_wait*
--
entry /
  chart.producer.start_thread()
  chart.producer.thread.post_fifo(..)
  	chart.post_fifo(Event(
	  signal=signals.PIKA_SCOUTING_TIME_OUT), 
	  times=1,
	  period=0.5,
	  deferred=True)
  
exit / 
  chart.cancel_events(signals.PIKA_SCOUTING_TIME_OUT)
  chart.producer.stop_thread()
	
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>232</x>
      <y>440</y>
      <w>16</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>type=initial</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>232</x>
      <y>440</y>
      <w>88</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=-&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;90.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>120</x>
      <y>472</y>
      <w>200</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
SCOUT_NETWORK</panel_attributes>
    <additional_attributes>10.0;20.0;230.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>512</x>
      <y>672</y>
      <w>256</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>*AMQP_SERVER*
--
entry /

chart.post_fifo(
	signal=signals.SCOUTING_COMPLETE,
	payload=(chart.ip, True)
	
  
exit / 
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>216</x>
      <y>768</y>
      <w>248</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>*NOT_AMQP_SERVER*
--
entry /
chart.post_fifo(
	signal=signals.SCOUTING_COMPLETE,
	payload=(chart.ip,False)

valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>440</x>
      <y>536</y>
      <w>24</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=-&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>320</x>
      <y>608</y>
      <w>128</w>
      <h>176</h>
    </coordinates>
    <panel_attributes>lt=-&gt;</panel_attributes>
    <additional_attributes>140.0;10.0;10.0;10.0;10.0;200.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>456</x>
      <y>608</y>
      <w>200</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=-&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;230.0;10.0;230.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>208</x>
      <y>592</y>
      <w>224</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>[chart.producer.thread.connection_error]
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>1128</x>
      <y>768</y>
      <w>352</w>
      <h>288</h>
    </coordinates>
    <panel_attributes>*Recon Rabbit Consumers*
--
chart.subscribe(Event(signal=signal.SCOUTING_COMPLETE))
chart.candidate_ip_addresses = []
chart.search_space = addresses

for ip_address in chart.other.addresses:
  amqp_url = ...
  producer_scout = ProducerScout(ip_address=..
  chart.candidates[ip] = producer_scout
  producer_scout.start_at(search)

SCOUTING_COMPLETE(ip, payload) / 
  if ip in chart.other.addresses
    if payload==True:
      chart.candidate_ip_addresses.append(ip)
    del(chart.candidates[ip])

    chart.search_space.remove(ip)
    if chart.search_space.empty()
      chart.post_fifo(Event(signal=signals.RECON_COMPLETE),
        payload=chart.candidate_ip_addresses)
  

 
    
  



  

	
exit / 

valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>8</x>
      <y>24</y>
      <w>176</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>*RabbitConsumerScout*
--
ip_address
rabbit_user
rabbit_password
routing_key
exchange_name
encryption_key
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>96</x>
      <y>200</y>
      <w>160</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>symbol=component
Event Processor</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>168</x>
      <y>232</y>
      <w>48</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=[^]-(</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0;30.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1352</x>
      <y>400</y>
      <w>24</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=()-[v]</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>432</x>
      <y>600</y>
      <w>32</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>type=decision</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>760</x>
      <y>704</y>
      <w>312</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=-&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;370.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>456</x>
      <y>808</y>
      <w>624</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=-&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;760.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>864</x>
      <y>680</y>
      <w>208</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>SCOUTING_COMPLETE(ip, TRUE)
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>856</x>
      <y>784</y>
      <w>208</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>SCOUTING_COMPLETE(ip, FALSE)
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1472</x>
      <y>904</y>
      <w>408</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=-&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;490.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>1488</x>
      <y>880</y>
      <w>248</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>RECON_COMPLETE(payload=ip_address)
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1184</x>
      <y>616</y>
      <w>56</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
</panel_attributes>
    <additional_attributes>10.0;20.0;50.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>1184</x>
      <y>624</y>
      <w>16</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>type=initial</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1400</x>
      <y>608</y>
      <w>160</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
ARP_FILL_TIME_OUT</panel_attributes>
    <additional_attributes>10.0;20.0;180.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1472</x>
      <y>816</y>
      <w>344</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
RECON</panel_attributes>
    <additional_attributes>410.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1904</x>
      <y>208</y>
      <w>160</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>symbol=component
Event Processor</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1976</x>
      <y>240</y>
      <w>40</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>lt=[^]-(</panel_attributes>
    <additional_attributes>20.0;10.0;20.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1896</x>
      <y>0</y>
      <w>232</w>
      <h>272</h>
    </coordinates>
    <panel_attributes>*MirosRabbitMQConnections*
--
other.addresses
--
make_amqp_url(ip_address)
in_automatic_cache()
in_manual_live_cache()
in_manual_dead_cache()
append_automatic()
append_dead()
remove_all_automatic()
remove_all_dead()
destroy()
--
expired
dict


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1984</x>
      <y>288</y>
      <w>24</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=()-[v]</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>1888</x>
      <y>312</y>
      <w>960</w>
      <h>880</h>
    </coordinates>
    <panel_attributes>*scout memory*
--
entry /
  if not hasattr(chart, 'cache_file_chart'):
    chart.cache_file_chart = CacheFileChart(live_trace=True)
    
  if not hasattr(chart, 'rabbitmq_lan_recce'):
    chart.rabbitmq_lan_recce = LanRecceChart(chart.routing_key,chart.exchange_name)
  
  chart.subscribe(Event(signal=signals.LAN_RECCE_COMPLETE))
  chart.subscribe(Event(signal=signals.CACHE))

valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>2112</x>
      <y>520</y>
      <w>712</w>
      <h>520</h>
    </coordinates>
    <panel_attributes>*Read the cache*
--
entry /


OTHER_ALIEN_CACHE /
  chart.defer(e)



  

  

   
   

valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>2288</x>
      <y>840</y>
      <w>248</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>*Broadcast the cache*
--
/entry
  # make json cache
  dispatch to add members of network
  chart.post_fifo(
    NETWORK_RESULTS(

  chart.recall()

valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1880</x>
      <y>664</y>
      <w>248</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=-&gt;

</panel_attributes>
    <additional_attributes>10.0;20.0;290.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>2288</x>
      <y>576</y>
      <w>504</w>
      <h>224</h>
    </coordinates>
    <panel_attributes>*DiscoverNetwork*
--
entry /
  chart.publish(Event(signals.RECCE_LAN))

LAN_RECCE_COMPLETE as e /
   live_ip_address = e.payload
   
  


valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>1104</x>
      <y>544</y>
      <w>16</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>type=initial</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1104</x>
      <y>536</y>
      <w>80</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
</panel_attributes>
    <additional_attributes>10.0;20.0;80.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2984</x>
      <y>496</y>
      <w>208</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0;240.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1880</x>
      <y>1128</y>
      <w>208</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
OTHER_ALIEN_CACHE</panel_attributes>
    <additional_attributes>10.0;20.0;240.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>2144</x>
      <y>624</y>
      <w>16</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>type=initial</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2160</x>
      <y>664</y>
      <w>144</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
</panel_attributes>
    <additional_attributes>10.0;20.0;160.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>2136</x>
      <y>664</y>
      <w>32</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>type=decision</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2144</x>
      <y>624</y>
      <w>24</w>
      <h>56</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2144</x>
      <y>688</y>
      <w>160</w>
      <h>288</h>
    </coordinates>
    <panel_attributes>lt=-&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;340.0;180.0;340.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2640</x>
      <y>824</y>
      <w>352</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=-&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;420.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>2848</x>
      <y>808</y>
      <w>184</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>OTHER_ALIEN_CACHE
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>248</x>
      <y>920</y>
      <w>176</w>
      <h>216</h>
    </coordinates>
    <panel_attributes>*CacheFile*
--
writable()
exists()
write_access_on()
write_access_off()
temp_file_name()
expired()
--
json
file_path
system_read_signal_name



</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>136</x>
      <y>1208</y>
      <w>904</w>
      <h>712</h>
    </coordinates>
    <panel_attributes>*file_access_waiting*
--
entry /
  cache.subscribe(
    Event(signal=signals.CACHE_FILE_WRITE))
  cache.subscribe(
    Event(signal=signals.CACHE_FILE_READ))
  if not os.path.isfile(cache.file_path)
    open(cache.file_path, 'a').close()
    
CACHE_FILE_WRITE(e) /
  cache.json = json
  cache.post_fifo(
    Event(
      signal=signals.file_write,
    payload=e.payload))
      
CACHE_FILE_READ /
  cache.post_fifo(
    Event(signal=signals.file_read))

CACHE_DESTROY /
   cache.post_fifo(
     Event(signal=signals.file_write, payload="")
   

valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>520</x>
      <y>1280</y>
      <w>408</w>
      <h>584</h>
    </coordinates>
    <panel_attributes>*file_accessed*
--
entry /
  cache.write_access_off()
  
exit / 
  cache.write_access_on()

valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>128</x>
      <y>1552</y>
      <w>144</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
file_read</panel_attributes>
    <additional_attributes>10.0;20.0;160.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>256</x>
      <y>1552</y>
      <w>32</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>type=decision</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>280</x>
      <y>1560</y>
      <w>296</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=-&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;350.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>328</x>
      <y>1608</y>
      <w>16</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>type=flow_final</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>264</x>
      <y>1576</y>
      <w>80</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=-&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0;80.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>560</x>
      <y>1384</y>
      <w>344</w>
      <h>224</h>
    </coordinates>
    <panel_attributes>*file_read*
--
entry /
  cache.dict = json.load(open(cache.file_path, 'r'))
  cache.json = json.dumps(cache.dict, sort_keys=True, indent=2)
  cache.last_modified = os.path.getmtime(cache.file_path)
  cache.created_at = time.ctime(os.path.getctime(cache.file_path))
  payload = {
    'dict': cache.dict,
    'last_modified': cache.last_modified,
    'created_at': cache.created_at,
    'expired': cache.expired()
  }
  cache.post_fifo(Event(signal=signals.CACHE, payload=payload))
  cache.post_lifo(Event(signal=signals.read_successful))


valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>280</x>
      <y>1544</y>
      <w>112</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>[cache.writable()]
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>168</x>
      <y>1792</y>
      <w>296</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>chart.post_fifo(
  Event(signal=signals.file_write, payload=e.payload),
  period=random.uniform(0.001, timeout),
  times=1,
  deferred=True)
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>128</x>
      <y>1736</y>
      <w>144</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
file_write</panel_attributes>
    <additional_attributes>10.0;20.0;160.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>256</x>
      <y>1736</y>
      <w>32</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>type=decision</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>328</x>
      <y>1792</y>
      <w>16</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>type=flow_final</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>264</x>
      <y>1760</y>
      <w>80</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=-&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0;80.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>280</x>
      <y>1744</y>
      <w>304</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=-&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;360.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>288</x>
      <y>1736</y>
      <w>104</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>[cache.writable()]
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>152</x>
      <y>1608</y>
      <w>264</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>chart.post_fifo(
  Event(signal=signals.file_read),
  period=random.uniform(0.001, timeout),
  times=1,
  deferred=True)
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>560</x>
      <y>1624</y>
      <w>344</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>*file_write*
--
entry /
  temp_file = cache.temp_file_name()
  f = open(temp_file, "w")
  cache.json = e.payload
  f.write(e.payload)
  # write the file to disk
  f.flush()
  os.fsync(f.fileno())
  f.close()
  # atomic replacement of cache.file_name
  os.rename(temp_file, cache.file_name)
  cache.post_lifo(Event(signal=signals.write_successful))
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>896</x>
      <y>1432</y>
      <w>288</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=-&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;340.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>928</x>
      <y>1416</y>
      <w>256</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>&lt;system_read_signal_name(CACHE)&gt; (json)
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>896</x>
      <y>1488</y>
      <w>160</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
read_successful</panel_attributes>
    <additional_attributes>10.0;20.0;180.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>896</x>
      <y>1720</y>
      <w>160</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
write_successful</panel_attributes>
    <additional_attributes>10.0;20.0;180.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>1128</x>
      <y>1256</y>
      <w>368</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>Event(signal=signals.&lt;system_read_signal_name, default=CACHE&gt;,
 payload = {
  dict:  &lt;cache file contents as dict&gt;
  last_modified: &lt;time_cache_last_modified&gt;
  created_at: &lt;time when cache created&gt;
  expired: &lt;True/False&gt;
 }
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1120</x>
      <y>1240</y>
      <w>360</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>The output event:
fg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1088</x>
      <y>1336</y>
      <w>112</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;100.0;120.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>640</x>
      <y>1032</y>
      <w>272</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>cache_chart = CacheFileChart(live_trace=True)
 
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>640</x>
      <y>1008</y>
      <w>272</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>To create cache file chart object:
fg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>488</x>
      <y>1040</y>
      <w>168</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;140.0;190.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>256</x>
      <y>1080</y>
      <w>160</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>symbol=component
Event Processor</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>368</x>
      <y>1128</y>
      <w>24</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;30.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>16</x>
      <y>1152</y>
      <w>1056</w>
      <h>800</h>
    </coordinates>
    <panel_attributes>*CacheFileChart*
--





fg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>64</x>
      <y>1368</y>
      <w>16</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>type=initial</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>64</x>
      <y>1368</y>
      <w>88</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=-&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;90.0;10.0</additional_attributes>
  </element>
  <element>
    <id>PlotGrid</id>
    <coordinates>
      <x>296</x>
      <y>1648</y>
      <w>232</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>// datasets can have optional names set (in this case "first_name")
data first_name
n[0] n[1] n[2] n[3] n[&gt;=4]
0.1 1.3	2.5 3.7 5 

// some settings are global, like the width of the grid

data
a	b	c d
1	2	3 4

// A variable which is on it's own line is valid for every following plot
type=auto
colors=auto
plot</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>384</x>
      <y>1640</y>
      <w>56</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>timeout:
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>1888</x>
      <y>632</y>
      <w>232</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>CACHE(e)
chart.cache.dict = e.payload.dict
chart.cache.expired = e.payload.expired
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>2168</x>
      <y>648</y>
      <w>144</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>
[chart.cache.expired]
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>160</y>
      <w>864</w>
      <h>752</h>
    </coordinates>
    <panel_attributes>*RabbitConsumerScoutChart*
--





fg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>88</x>
      <y>136</y>
      <w>24</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;30.0</additional_attributes>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>2072</x>
      <y>1120</y>
      <w>144</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>Alien Cache Receive
symbol=substate</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>2272</x>
      <y>632</y>
      <w>16</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>
bg=green</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1872</x>
      <y>640</y>
      <w>16</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>
bg=green</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1888</x>
      <y>1128</y>
      <w>16</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>
bg=green</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>2344</x>
      <y>344</y>
      <w>320</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>CacheReadPayload = \
  namedtuple('CacheReadPayload',
    ['dict', 'last_modified', 'created_at', 'expired', 'file_name'])</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1912</x>
      <y>392</y>
      <w>472</w>
      <h>256</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>570.0;10.0;450.0;130.0;10.0;130.0;10.0;300.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>2536</x>
      <y>600</y>
      <w>208</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>RecceCompletePayload = \
  namedtuple(
    'RecceCompletePayload',
        ['other_addresses', 'my_address'])

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2440</x>
      <y>608</y>
      <w>112</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;50.0;80.0;50.0;120.0;10.0</additional_attributes>
  </element>
</diagram>
