<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>8</zoom_level>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>152</x>
      <y>512</y>
      <w>1008</w>
      <h>632</h>
    </coordinates>
    <panel_attributes>*producer discovery*
--
entry /
  chart.mesh_producers = []
  chart.snoop_trace_producers = []
  chart.snoop_spy_producers = []
  chart.subscribe(Event(signals.CONNECTION_DISCOVERY))
  if not hasattr(chart, 'man_net_chart'):
    chart.man_net_chart = ManNetChart(
      chart.mesh_routing_key, chart.mesh_exchange_name)
  
  if not hasattr(chart, 'lan_chart'):
    chart.lan_chart = LanChart(
      chart.mesh_routing_key, chart.mesh_exchange_name)

  chart.set_of_ips = set([])
  
      
CONNECTION_DISCOVERY as e /
   set_of_payload_ips = set([chart.get_ip_for_hostname(host) for host in e.payload.hosts]) 
   chart.set_of_new_ips = set_of_payload_ips - chart.set_of_ips
   chart.set_of_ips |= set_of_payload_ips

   if(len(chart.set_of_new_ips) &gt; 0):
     chart.post_fifo(Event(signals.ips_discovered))

    # let garbage collector remove charts if they have done their work
    if e.payload.dispatcher == 'man_net_chart':
      del chart.man_net_chart
    elif e.payload.dispatcher == 'lan_chart':
      def chart.lan_chart
  

valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>376</x>
      <y>696</y>
      <w>232</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>ConnectionDiscoveryPayload = \
  namedtuple('ConnectionDiscoveryPayload',
    ['hosts', 'amqp_urls', 'dispatcher'])</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>456</x>
      <y>104</y>
      <w>232</w>
      <h>264</h>
    </coordinates>
    <panel_attributes>*ProducerFactoryAggregator*
--
mesh_producers
snoop_trace_producers
snoop_spy_producers
set_of_ips
ips
amqp_ip_urls
lan_discovered
mannal_discovered
producers
--
make_amqp_url(ip_address)
get_ip_for_hostname()
make_amqp_url
make_mesh_producer(ip)
make_snoop_trace_producer(ip)
make_snoop_spy_producer(ip)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>552</x>
      <y>360</y>
      <w>24</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>104</x>
      <y>392</y>
      <w>1072</w>
      <h>776</h>
    </coordinates>
    <panel_attributes>*ProducerFactoryChart*
--





fg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>192</x>
      <y>456</y>
      <w>40</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=[^]-(</panel_attributes>
    <additional_attributes>20.0;10.0;20.0;30.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>200</x>
      <y>488</y>
      <w>24</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=()-[v]</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>128</x>
      <y>424</y>
      <w>160</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>symbol=component
Event Processor</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>720</x>
      <y>272</y>
      <w>232</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>Note..
  keeps track of everything as raw IP
  addresses to avoid sending two messages
  to the same URL</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>704</x>
      <y>648</y>
      <w>424</w>
      <h>456</h>
    </coordinates>
    <panel_attributes>*refactor_producers*
--
entry /
  new_ips = list(chart.set_of_new_ips)
  new_mesh_producers = \
    [self.make_mesh_producer(ip) for ip in new_ips]
  new_snoop_trace_producers = \
    [self.make_snoop_trace_producer(ip) for ip in new_ips]
  new_snoop_spy_producers = \
    [self.make_snoop_spy_producer(ip) for ip in new_ips]
  chart.mesh_producers.append(new_mesh_producers)
  chart.snoop_trace_producers.append(new_snoop_trace_producers)
  chart.snoop_spy_producers.append(new_snoop_spy_producers)
  chart.producer_discovery_queue.put(
    ProducerQueue(
      mesh_producers=chart.mesh_producers,
   	snoop_trace_producers=chart.snoop_trace_producers,
   	snoop_spy_producers=chart.snoop_spy_producers))
  try:
    chart.producer_queue.put(payload, block=False)
  except:
    chart.post_fifo(
      Event(signals.ips_discovered, 
        times=1, period=random.uniform(0.1,1), deferred=True)
  else:
    chart.post_fifo(Event(signals.ready))
   


valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>144</x>
      <y>976</y>
      <w>576</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
ips_discovered
  </panel_attributes>
    <additional_attributes>10.0;20.0;700.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>144</x>
      <y>1032</y>
      <w>496</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
ready</panel_attributes>
    <additional_attributes>600.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>176</x>
      <y>0</y>
      <w>232</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>*ProducerFactory*
--
exchange_name
routing_key
publish_tempo_sec
serialization_function
amqp_url
encryption_key (from subsclass)
--
make_amqp_url(ip)
make_producer()


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>184</x>
      <y>208</y>
      <w>184</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>*MeshProducerFactory*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>184</x>
      <y>240</y>
      <w>184</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>*SnoopTraceProducerFactory*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>184</x>
      <y>272</y>
      <w>184</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>*SnoopSpyProducerFactory*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>112</x>
      <y>144</y>
      <w>192</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>220.0;10.0;220.0;50.0;10.0;50.0;10.0;130.0;50.0;130.0</additional_attributes>
  </element>
  <element>
    <id>UMLSyncBarVertical</id>
    <coordinates>
      <x>144</x>
      <y>208</y>
      <w>16</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>template=txt
title=titletext
bg=red</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>144</x>
      <y>208</y>
      <w>56</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>144</x>
      <y>240</y>
      <w>56</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>144</x>
      <y>272</y>
      <w>56</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>360</x>
      <y>208</y>
      <w>112</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>120.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>360</x>
      <y>240</y>
      <w>112</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>120.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>360</x>
      <y>272</y>
      <w>112</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>120.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>728</x>
      <y>1024</y>
      <w>376</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>ProducerQueue = \
  namedtuple('ProducerQueue',
    ['mesh_producers', 'snoop_trace_producers', 'snoop_spy_producers'])
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>712</x>
      <y>104</y>
      <w>216</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>ProducerFactoryChart(
  producer_discovery_queue,
  mesh_routing_key,
  mesh_exchange_name,
  mesh_serialization_function,
  snoop_trace_routing_key,
  snoop_trace_exchange_name,
  snoop_trace_serialization_function,
  snoop_spy_routing_key,
  snoop_spy_exchange_name,
  snoop_spy_serialization_function)
  
  
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>136</x>
      <y>736</y>
      <w>16</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>
bg=green</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>688</x>
      <y>824</y>
      <w>16</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>
bg=red</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>624</x>
      <y>552</y>
      <w>520</w>
      <h>568</h>
    </coordinates>
    <panel_attributes>*post_to_queue*
--
CONNECTION_DISCOVERED /
  chart.defer(e)
  
exit /
  chart.set_of_new_ips = set([])
  chart.recall()
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>616</x>
      <y>920</y>
      <w>104</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
ips_discovered
  </panel_attributes>
    <additional_attributes>10.0;20.0;110.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>456</x>
      <y>64</y>
      <w>80</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>Factory</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>488</x>
      <y>80</y>
      <w>24</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;30.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>680</x>
      <y>288</y>
      <w>56</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>120</x>
      <y>640</y>
      <w>16</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>type=initial</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>120</x>
      <y>640</y>
      <w>48</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=-&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;40.0;10.0</additional_attributes>
  </element>
</diagram>
