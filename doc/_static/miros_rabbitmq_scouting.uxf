<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>8</zoom_level>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>568</x>
      <y>192</y>
      <w>24</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=()-[v]</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1152</x>
      <y>232</y>
      <w>160</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>symbol=component
Event Processor</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1224</x>
      <y>264</y>
      <w>40</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>lt=[^]-(</panel_attributes>
    <additional_attributes>20.0;10.0;20.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1144</x>
      <y>152</y>
      <w>176</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>*Recon*
--
my.address
my.addresses
other.addresses


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>960</x>
      <y>344</y>
      <w>720</w>
      <h>648</h>
    </coordinates>
    <panel_attributes>*private_search*
--
entry /
exit / 

valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>1048</x>
      <y>392</y>
      <w>592</w>
      <h>264</h>
    </coordinates>
    <panel_attributes>*lan_recon*
--

valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>1104</x>
      <y>456</y>
      <w>184</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>*fill_arp_table*
--
entry /
	chart.post_fifo(Event(
	  signal=signals.ARP_TIME_OUT), 
	  times=1,
	  period=2.0,
	  deferred=True)
exit / 
	chart.cancel_events(
	  signals.ARP_FILL_TIME_OUT)
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>1424</x>
      <y>456</y>
      <w>192</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>*identify_all_ip_addresses*
--
entry /
	chart.this.address = ..
	chart.this.addresses = ..
	chart.other.addresses = .. # apppend
	chart.post_fifo(
	  Event(signal=signals.RECON))
	

valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>8</x>
      <y>224</y>
      <w>728</w>
      <h>584</h>
    </coordinates>
    <panel_attributes>*search*
--
entry /
	chart.producer.thread = 
	  PikaTopicPublisher(..)

    
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>184</x>
      <y>264</y>
      <w>320</w>
      <h>192</h>
    </coordinates>
    <panel_attributes>*post_and_wait*
--
entry /
  chart.producer.start_thread()
  chart.producer.thread.post_fifo(..)
  	chart.post_fifo(Event(
	  signal=signals.PIKA_SCOUTING_TIME_OUT), 
	  times=1,
	  period=0.5,
	  deferred=True)
  
exit / 
  chart.cancel_events(signals.PIKA_SCOUTING_TIME_OUT)
  chart.producer.stop_thread()
	
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>112</x>
      <y>352</y>
      <w>16</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>type=initial</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>112</x>
      <y>352</y>
      <w>88</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=-&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;90.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>0</x>
      <y>384</y>
      <w>200</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
SCOUT_NETWORK</panel_attributes>
    <additional_attributes>10.0;20.0;230.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>392</x>
      <y>584</y>
      <w>256</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>*AMQP_SERVER*
--
entry /

chart.post_fifo(
	signal=signals.SCOUTING_COMPLETE,
	payload=(chart.ip, True)
	
  
exit / 
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>96</x>
      <y>680</y>
      <w>248</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>*NOT_AMQP_SERVER*
--
entry /
chart.post_fifo(
	signal=signals.SCOUTING_COMPLETE,
	payload=(chart.ip,False)

valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>320</x>
      <y>448</y>
      <w>24</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=-&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>200</x>
      <y>520</y>
      <w>128</w>
      <h>176</h>
    </coordinates>
    <panel_attributes>lt=-&gt;</panel_attributes>
    <additional_attributes>140.0;10.0;10.0;10.0;10.0;200.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>336</x>
      <y>520</y>
      <w>200</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=-&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;230.0;10.0;230.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>88</x>
      <y>504</y>
      <w>224</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>[chart.producer.thread.connection_error]
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>1008</x>
      <y>680</y>
      <w>352</w>
      <h>288</h>
    </coordinates>
    <panel_attributes>*Recon Rabbit Consumers*
--
chart.subscribe(Event(signal=signal.SCOUTING_COMPLETE))
chart.candidate_ip_addresses = []
chart.search_space = addresses

for ip_address in chart.other.addresses:
  amqp_url = ...
  producer_scout = ProducerScout(ip_address=..
  chart.candidates[ip] = producer_scout
  producer_scout.start_at(search)

SCOUTING_COMPLETE(ip, payload) / 
  if ip in chart.other.addresses
    if payload==True:
      chart.candidate_ip_addresses.append(ip)
    del(chart.candidates[ip])

    chart.search_space.remove(ip)
    if chart.search_space.empty()
      chart.post_fifo(Event(signal=signals.RECON_COMPLETE),
        payload=chart.candidate_ip_addresses)
  

 
    
  



  

	
exit / 

valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>480</x>
      <y>0</y>
      <w>176</w>
      <h>176</h>
    </coordinates>
    <panel_attributes>*ProducerScout*
--
ip_address
rabbit_user
rabbit_password
routing_key
exchange_name
encryption_key
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>488</x>
      <y>112</y>
      <w>160</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>symbol=component
Event Processor</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>560</x>
      <y>144</y>
      <w>40</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>lt=[^]-(</panel_attributes>
    <additional_attributes>20.0;10.0;20.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1232</x>
      <y>312</y>
      <w>24</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=()-[v]</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>312</x>
      <y>512</y>
      <w>32</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>type=decision</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>640</x>
      <y>616</y>
      <w>312</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=-&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;370.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>336</x>
      <y>720</y>
      <w>624</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=-&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;760.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>744</x>
      <y>592</y>
      <w>208</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>SCOUTING_COMPLETE(ip, TRUE)
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>736</x>
      <y>696</y>
      <w>208</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>SCOUTING_COMPLETE(ip, FALSE)
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1352</x>
      <y>816</y>
      <w>408</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=-&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;490.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>1368</x>
      <y>792</y>
      <w>248</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>RECON_COMPLETE(payload=ip_address)
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1064</x>
      <y>528</y>
      <w>56</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
</panel_attributes>
    <additional_attributes>10.0;20.0;50.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>1064</x>
      <y>536</y>
      <w>16</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>type=initial</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1280</x>
      <y>520</y>
      <w>160</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
ARP_FILL_TIME_OUT</panel_attributes>
    <additional_attributes>10.0;20.0;180.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1352</x>
      <y>728</y>
      <w>344</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
RECON</panel_attributes>
    <additional_attributes>410.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1784</x>
      <y>120</y>
      <w>160</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>symbol=component
Event Processor</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1856</x>
      <y>152</y>
      <w>40</w>
      <h>64</h>
    </coordinates>
    <panel_attributes>lt=[^]-(</panel_attributes>
    <additional_attributes>20.0;10.0;20.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1776</x>
      <y>24</y>
      <w>232</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>*RabbitCache*
--
my.address
my.addresses
other.addresses
--
expired(last_modified, time_out_in_minutes)


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1864</x>
      <y>200</y>
      <w>24</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=()-[v]</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>1768</x>
      <y>224</y>
      <w>1000</w>
      <h>1128</h>
    </coordinates>
    <panel_attributes>*scout memory*
--
entry /
  if not hasattr(chart, 'cache_file_chart'):
    chart.cache_file_chart = CacheFileChart(live_trace=True)
  chart.subscribe(
    Event(signal=signals.RECON_COMPLETE))
  chart.subscribe(
    Event(signal=signals.SCOUTING_COMPLETE))
  chart.subscribe(
    Event(signal=signals.CACHE))

  chart.post_fifo(Event(signal=signals.READ_CACHE))
    

        

valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>1920</x>
      <y>432</y>
      <w>784</w>
      <h>520</h>
    </coordinates>
    <panel_attributes>*Read the cache*
--
entry /
  chart.sm = ScoutMemory()



  

  

   
   

valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>2368</x>
      <y>664</y>
      <w>248</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>*Broadcast the cache*
--
/entry
  # make json cache
  dispatch to add members of network
  chart.post_fifo(
    NETWORK_RESULTS(

  chart.recall()

valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>1952</x>
      <y>976</y>
      <w>752</w>
      <h>336</h>
    </coordinates>
    <panel_attributes>*Alien cache received*
--
chart.subscribe(Event(signal=signal.SCOUTING_COMPLETE))
alien_ips = list(set(self.address) - set(self.other_addresses))

for ip_address in alien_ips:
  amqp_url = ...
  producer_scout = ProducerScout(ip_address=..
  chart.candidates[ip] = producer_scout
  producer_scout.start_at(search)

SCOUTING_COMPLETE(ip, payload) / 
  if payload==True:
    chart.candidate_ip_addresses.append(ip)
  del(chart.candidates[ip])

  chart.search_space.remove(ip)
  if chart.search_space.empty()
    chart.post_fifo(Event(signal=signals.RECON_COMPLETE),
      payload=chart.candidate_ip_addresses)
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1760</x>
      <y>576</y>
      <w>272</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
CACHE(e)</panel_attributes>
    <additional_attributes>10.0;20.0;320.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1760</x>
      <y>472</y>
      <w>176</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=-&gt;</panel_attributes>
    <additional_attributes>200.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>2168</x>
      <y>528</y>
      <w>504</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>*DiscoverNetwork*
--
entry /
  recon = Recon()
  recon.start_at(search)

ALIEN_CACHE /
  chart.defer(e)


  


valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>984</x>
      <y>456</y>
      <w>16</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>type=initial</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>984</x>
      <y>448</y>
      <w>80</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
</panel_attributes>
    <additional_attributes>10.0;20.0;80.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2176</x>
      <y>640</y>
      <w>208</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0;240.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>2192</x>
      <y>672</y>
      <w>192</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>RECON_COMPLETE
# append ip addresses
# read amqp values into memory
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1760</x>
      <y>1168</y>
      <w>208</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
ALIEN_CACHE</panel_attributes>
    <additional_attributes>10.0;20.0;240.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>2024</x>
      <y>536</y>
      <w>16</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>type=initial</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2040</x>
      <y>576</y>
      <w>144</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
</panel_attributes>
    <additional_attributes>10.0;20.0;160.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>2016</x>
      <y>576</y>
      <w>32</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>type=decision</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2024</x>
      <y>536</y>
      <w>24</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=-&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2024</x>
      <y>600</y>
      <w>360</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>lt=-&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;230.0;430.0;230.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2520</x>
      <y>736</y>
      <w>376</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=-&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;450.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>2776</x>
      <y>1160</y>
      <w>184</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>NETWORK_RESULTS
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2520</x>
      <y>1176</y>
      <w>376</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=-&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;450.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>2776</x>
      <y>720</y>
      <w>184</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>NETWORK_RESULTS
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>128</x>
      <y>832</y>
      <w>176</w>
      <h>216</h>
    </coordinates>
    <panel_attributes>*CacheFile*
--
writable()
exists()
write_access_on()
write_access_off()
temp_file_name()
expired()
--
json
file_path
system_read_signal_name



</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>136</x>
      <y>992</y>
      <w>160</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>symbol=component
Event Processor</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>200</x>
      <y>1024</y>
      <w>40</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=[^]-(</panel_attributes>
    <additional_attributes>20.0;10.0;20.0;40.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>208</x>
      <y>1064</y>
      <w>24</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=()-[v]</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>128</x>
      <y>1088</y>
      <w>800</w>
      <h>712</h>
    </coordinates>
    <panel_attributes>*file_access_waiting*
--
entry /
  cache.subscribe(
    Event(signal=signals.CACHE_FILE_WRITE))
  cache.subscribe(
    Event(signal=signals.CACHE_FILE_READ))
  if not os.path.isfile(cache.file_path)
    open(cache.file_path, 'a').close()
    
CACHE_FILE_WRITE(e) /
  cache.json = json
  cache.post_fifo(
    Event(
      signal=signals.file_write,
    payload=e.payload))
      
CACHE_FILE_READ /
  cache.post_fifo(
    Event(signal=signals.file_read))

CACHE_DESTROY /
   cache.post_fifo(
     Event(signal=signals.file_write, payload="")
   

valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>408</x>
      <y>1160</y>
      <w>408</w>
      <h>584</h>
    </coordinates>
    <panel_attributes>*file_accessed*
--
entry /
  cache.write_access_off()
  
exit / 
  cache.write_access_on()

valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>120</x>
      <y>1432</y>
      <w>144</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
file_read</panel_attributes>
    <additional_attributes>10.0;20.0;160.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>248</x>
      <y>1432</y>
      <w>32</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>type=decision</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>272</x>
      <y>1440</y>
      <w>192</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=-&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;220.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>288</x>
      <y>1488</y>
      <w>16</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>type=flow_final</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>256</x>
      <y>1456</y>
      <w>48</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=-&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0;40.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>448</x>
      <y>1264</y>
      <w>344</w>
      <h>224</h>
    </coordinates>
    <panel_attributes>*file_read*
--
entry /
  cache.dict = json.load(open(cache.file_path, 'r'))
  cache.json = json.dumps(cache.dict, sort_keys=True, indent=2)
  cache.last_modified = os.path.getmtime(cache.file_path)
  cache.created_at = time.ctime(os.path.getctime(cache.file_path))
  payload = {
    'dict': cache.dict,
    'last_modified': cache.last_modified,
    'created_at': cache.created_at,
    'expired': cache.expired()
  }
  cache.post_fifo(Event(signal=signals.CACHE, payload=payload))
  cache.post_lifo(Event(signal=signals.read_successful))


valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>280</x>
      <y>1424</y>
      <w>112</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>[cache.writable()]
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>136</x>
      <y>1656</y>
      <w>296</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>chart.post_fifo(
  Event(signal=signals.file_write, payload=e.payload),
  period=random.uniform(0.001, 0.1),
  times=1,
  deferred=True)
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>120</x>
      <y>1600</y>
      <w>144</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
file_write</panel_attributes>
    <additional_attributes>10.0;20.0;160.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>248</x>
      <y>1600</y>
      <w>32</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>type=decision</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>288</x>
      <y>1656</y>
      <w>16</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>type=flow_final</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>256</x>
      <y>1624</y>
      <w>48</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=-&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0;40.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>272</x>
      <y>1608</y>
      <w>192</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=-&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;220.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>280</x>
      <y>1592</y>
      <w>104</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>[cache.writable()]
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>176</x>
      <y>1488</y>
      <w>264</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>chart.post_fifo(
  Event(signal=signals.file_read),
  period=random.uniform(0.001, 0.1),
  times=1,
  deferred=True)
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>448</x>
      <y>1504</y>
      <w>344</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>*file_write*
--
entry /
  temp_file = cache.temp_file_name()
  f = open(temp_file, "w")
  cache.json = e.payload
  f.write(e.payload)
  # write the file to disk
  f.flush()
  os.fsync(f.fileno())
  f.close()
  # atomic replacement of cache.file_name
  os.rename(temp_file, cache.file_name)
  cache.post_lifo(Event(signal=signals.write_successful))
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>784</x>
      <y>1312</y>
      <w>288</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=-&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;340.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>824</x>
      <y>1296</y>
      <w>256</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>&lt;system_read_signal_name(CACHE)&gt; (json)
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>784</x>
      <y>1368</y>
      <w>160</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
read_successful</panel_attributes>
    <additional_attributes>10.0;20.0;180.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>784</x>
      <y>1600</y>
      <w>160</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
write_successful</panel_attributes>
    <additional_attributes>10.0;20.0;180.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>936</x>
      <y>1152</y>
      <w>368</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>Event(signal=signals.&lt;system_read_signal_name, default=CACHE&gt;,
 payload = {
  json:  &lt;cache file contents&gt;
  last_modified: &lt;time_cache_last_modified&gt;
  created_at: &lt;time when cache created&gt;
  expired: &lt;True/False&gt;
 }
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>936</x>
      <y>1136</y>
      <w>360</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>The output event:
fg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>936</x>
      <y>1232</y>
      <w>56</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;80.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>336</x>
      <y>856</y>
      <w>272</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>cache_file = CacheFile(
  'network_cache',
  file_path=str(Path('.') / '.miros_rabbit_cache.json'))
  
cache_file.start_at(file_access_waiting)
 
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>336</x>
      <y>832</y>
      <w>272</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>To create the object:
fg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>296</x>
      <y>864</y>
      <w>56</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;40.0;50.0;10.0</additional_attributes>
  </element>
</diagram>
