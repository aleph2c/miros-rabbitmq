<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>6</zoom_level>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>150</x>
      <y>192</y>
      <w>18</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>lt=()-[v]</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>954</x>
      <y>222</y>
      <w>120</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>symbol=component
Event Processor</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1008</x>
      <y>246</y>
      <w>30</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=[^]-(</panel_attributes>
    <additional_attributes>20.0;10.0;20.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>948</x>
      <y>162</y>
      <w>132</w>
      <h>108</h>
    </coordinates>
    <panel_attributes>*Recon*
--
my.address
my.addresses
other.addresses


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>810</x>
      <y>306</y>
      <w>540</w>
      <h>486</h>
    </coordinates>
    <panel_attributes>*private_search*
--
entry /
exit / 

valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>876</x>
      <y>342</y>
      <w>444</w>
      <h>198</h>
    </coordinates>
    <panel_attributes>*lan_recon*
--

valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>918</x>
      <y>390</y>
      <w>138</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>*fill_arp_table*
--
entry /
	chart.post_fifo(Event(
	  signal=signals.ARP_TIME_OUT), 
	  times=1,
	  period=2.0,
	  deferred=True)
exit / 
	chart.cancel_events(
	  signals.ARP_FILL_TIME_OUT)
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>1158</x>
      <y>390</y>
      <w>144</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>*identify_all_ip_addresses*
--
entry /
	chart.this.address = ..
	chart.this.addresses = ..
	chart.other.addresses = .. # apppend
	chart.post_fifo(
	  Event(signal=signals.RECON))
	

valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>96</x>
      <y>216</y>
      <w>498</w>
      <h>438</h>
    </coordinates>
    <panel_attributes>*search*
--
entry /
	chart.producer.thread = 
	  PikaTopicPublisher(..)

    
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>228</x>
      <y>246</y>
      <w>240</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>*post_and_wait*
--
entry /
  chart.producer.start_thread()
  chart.producer.thread.post_fifo(..)
  	chart.post_fifo(Event(
	  signal=signals.PIKA_SCOUTING_TIME_OUT), 
	  times=1,
	  period=0.5,
	  deferred=True)
  
exit / 
  chart.cancel_events(signals.PIKA_SCOUTING_TIME_OUT)
  chart.producer.stop_thread()
	
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>174</x>
      <y>312</y>
      <w>12</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>type=initial</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>174</x>
      <y>312</y>
      <w>66</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=-&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;90.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>90</x>
      <y>336</y>
      <w>150</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
SCOUT_NETWORK</panel_attributes>
    <additional_attributes>10.0;20.0;230.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>384</x>
      <y>486</y>
      <w>192</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>*AMQP_SERVER*
--
entry /

chart.post_fifo(
	signal=signals.SCOUTING_COMPLETE,
	payload=(chart.ip, True)
	
  
exit / 
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>162</x>
      <y>558</y>
      <w>186</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>*NOT_AMQP_SERVER*
--
entry /
chart.post_fifo(
	signal=signals.SCOUTING_COMPLETE,
	payload=(chart.ip,False)

valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>330</x>
      <y>384</y>
      <w>18</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=-&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>240</x>
      <y>438</y>
      <w>96</w>
      <h>132</h>
    </coordinates>
    <panel_attributes>lt=-&gt;</panel_attributes>
    <additional_attributes>140.0;10.0;10.0;10.0;10.0;200.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>342</x>
      <y>438</y>
      <w>150</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=-&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;230.0;10.0;230.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>156</x>
      <y>426</y>
      <w>168</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>[chart.producer.thread.connection_error]
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>846</x>
      <y>558</y>
      <w>264</w>
      <h>216</h>
    </coordinates>
    <panel_attributes>*Recon Rabbit Consumers*
--
chart.subscribe(Event(signal=signal.SCOUTING_COMPLETE))
chart.candidate_ip_addresses = []
chart.search_space = addresses

for ip_address in chart.other.addresses:
  amqp_url = ...
  producer_scout = ProducerScout(ip_address=..
  chart.candidates[ip] = producer_scout
  producer_scout.start_at(search)

SCOUTING_COMPLETE(ip, payload) / 
  if ip in chart.other.addresses
    if payload==True:
      chart.candidate_ip_addresses.append(ip)
    del(chart.candidates[ip])

    chart.search_space.remove(ip)
    if chart.search_space.empty()
      chart.post_fifo(Event(signal=signals.RECON_COMPLETE),
        payload=chart.candidate_ip_addresses)
  

 
    
  



  

	
exit / 

valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>6</x>
      <y>0</y>
      <w>132</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>*RabbitConsumerScout*
--
ip_address
rabbit_user
rabbit_password
routing_key
exchange_name
encryption_key
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>72</x>
      <y>132</y>
      <w>120</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>symbol=component
Event Processor</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>126</x>
      <y>156</y>
      <w>36</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=[^]-(</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0;30.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1014</x>
      <y>282</y>
      <w>18</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>lt=()-[v]</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>324</x>
      <y>432</y>
      <w>24</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>type=decision</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>570</x>
      <y>510</y>
      <w>234</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=-&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;370.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>342</x>
      <y>588</y>
      <w>468</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=-&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;760.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>648</x>
      <y>492</y>
      <w>156</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>SCOUTING_COMPLETE(ip, TRUE)
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>642</x>
      <y>570</y>
      <w>156</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>SCOUTING_COMPLETE(ip, FALSE)
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1104</x>
      <y>660</y>
      <w>306</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=-&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;490.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>1116</x>
      <y>642</y>
      <w>186</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>RECON_COMPLETE(payload=ip_address)
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>888</x>
      <y>444</y>
      <w>42</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
</panel_attributes>
    <additional_attributes>10.0;20.0;50.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>888</x>
      <y>450</y>
      <w>12</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>type=initial</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1050</x>
      <y>438</y>
      <w>120</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
ARP_FILL_TIME_OUT</panel_attributes>
    <additional_attributes>10.0;20.0;180.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1104</x>
      <y>594</y>
      <w>258</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
RECON</panel_attributes>
    <additional_attributes>410.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>1428</x>
      <y>138</y>
      <w>120</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>symbol=component
Event Processor</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1482</x>
      <y>162</y>
      <w>30</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=[^]-(</panel_attributes>
    <additional_attributes>20.0;10.0;20.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1422</x>
      <y>66</y>
      <w>174</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>*RabbitCache*
--
my.address
my.addresses
other.addresses
--
expired(last_modified, time_out_in_minutes)


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1488</x>
      <y>198</y>
      <w>18</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>lt=()-[v]</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>1416</x>
      <y>216</y>
      <w>750</w>
      <h>846</h>
    </coordinates>
    <panel_attributes>*scout memory*
--
entry /
  if not hasattr(chart, 'cache_file_chart'):
    chart.cache_file_chart = CacheFileChart(live_trace=True)
  chart.subscribe(
    Event(signal=signals.RECON_COMPLETE))
  chart.subscribe(
    Event(signal=signals.SCOUTING_COMPLETE))
  chart.subscribe(
    Event(signal=signals.CACHE))

  chart.post_fifo(Event(signal=signals.READ_CACHE))
    

        

valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>1584</x>
      <y>372</y>
      <w>534</w>
      <h>390</h>
    </coordinates>
    <panel_attributes>*Read the cache*
--
entry /
  chart.sm = ScoutMemory()



  

  

   
   

valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>1866</x>
      <y>546</y>
      <w>186</w>
      <h>114</h>
    </coordinates>
    <panel_attributes>*Broadcast the cache*
--
/entry
  # make json cache
  dispatch to add members of network
  chart.post_fifo(
    NETWORK_RESULTS(

  chart.recall()

valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>1554</x>
      <y>780</y>
      <w>564</w>
      <h>252</h>
    </coordinates>
    <panel_attributes>*Alien cache received*
--
chart.subscribe(Event(signal=signal.SCOUTING_COMPLETE))
alien_ips = list(set(self.address) - set(self.other_addresses))

for ip_address in alien_ips:
  amqp_url = ...
  producer_scout = ProducerScout(ip_address=..
  chart.candidates[ip] = producer_scout
  producer_scout.start_at(search)

SCOUTING_COMPLETE(ip, payload) / 
  if payload==True:
    chart.candidate_ip_addresses.append(ip)
  del(chart.candidates[ip])

  chart.search_space.remove(ip)
  if chart.search_space.empty()
    chart.post_fifo(Event(signal=signals.RECON_COMPLETE),
      payload=chart.candidate_ip_addresses)
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1410</x>
      <y>480</y>
      <w>186</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=-&gt;

</panel_attributes>
    <additional_attributes>10.0;20.0;290.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>1716</x>
      <y>444</y>
      <w>378</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>*DiscoverNetwork*
--
entry /
  recon = Recon()
  recon.start_at(search)

ALIEN_CACHE /
  chart.defer(e)


  


valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>828</x>
      <y>390</y>
      <w>12</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>type=initial</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>828</x>
      <y>384</y>
      <w>60</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
</panel_attributes>
    <additional_attributes>10.0;20.0;80.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1722</x>
      <y>528</y>
      <w>156</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0;240.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>1734</x>
      <y>552</y>
      <w>144</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>RECON_COMPLETE
# append ip addresses
# read amqp values into memory
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1410</x>
      <y>924</y>
      <w>156</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
ALIEN_CACHE</panel_attributes>
    <additional_attributes>10.0;20.0;240.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>1608</x>
      <y>450</y>
      <w>12</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>type=initial</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1620</x>
      <y>480</y>
      <w>108</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
</panel_attributes>
    <additional_attributes>10.0;20.0;160.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>1602</x>
      <y>480</y>
      <w>24</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>type=decision</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1608</x>
      <y>450</y>
      <w>18</w>
      <h>42</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1608</x>
      <y>498</y>
      <w>270</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>lt=-&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;230.0;430.0;230.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1980</x>
      <y>600</y>
      <w>282</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=-&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;450.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>2172</x>
      <y>918</y>
      <w>138</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>NETWORK_RESULTS
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1980</x>
      <y>930</y>
      <w>282</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=-&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;450.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>2172</x>
      <y>588</y>
      <w>138</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>NETWORK_RESULTS
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>186</x>
      <y>672</y>
      <w>132</w>
      <h>162</h>
    </coordinates>
    <panel_attributes>*CacheFile*
--
writable()
exists()
write_access_on()
write_access_off()
temp_file_name()
expired()
--
json
file_path
system_read_signal_name



</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>102</x>
      <y>888</y>
      <w>678</w>
      <h>534</h>
    </coordinates>
    <panel_attributes>*file_access_waiting*
--
entry /
  cache.subscribe(
    Event(signal=signals.CACHE_FILE_WRITE))
  cache.subscribe(
    Event(signal=signals.CACHE_FILE_READ))
  if not os.path.isfile(cache.file_path)
    open(cache.file_path, 'a').close()
    
CACHE_FILE_WRITE(e) /
  cache.json = json
  cache.post_fifo(
    Event(
      signal=signals.file_write,
    payload=e.payload))
      
CACHE_FILE_READ /
  cache.post_fifo(
    Event(signal=signals.file_read))

CACHE_DESTROY /
   cache.post_fifo(
     Event(signal=signals.file_write, payload="")
   

valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>390</x>
      <y>942</y>
      <w>306</w>
      <h>438</h>
    </coordinates>
    <panel_attributes>*file_accessed*
--
entry /
  cache.write_access_off()
  
exit / 
  cache.write_access_on()

valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>96</x>
      <y>1146</y>
      <w>108</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
file_read</panel_attributes>
    <additional_attributes>10.0;20.0;160.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>192</x>
      <y>1146</y>
      <w>24</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>type=decision</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>210</x>
      <y>1152</y>
      <w>222</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=-&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;350.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>246</x>
      <y>1188</y>
      <w>12</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>type=flow_final</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>198</x>
      <y>1164</y>
      <w>60</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>lt=-&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0;80.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>420</x>
      <y>1020</y>
      <w>258</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>*file_read*
--
entry /
  cache.dict = json.load(open(cache.file_path, 'r'))
  cache.json = json.dumps(cache.dict, sort_keys=True, indent=2)
  cache.last_modified = os.path.getmtime(cache.file_path)
  cache.created_at = time.ctime(os.path.getctime(cache.file_path))
  payload = {
    'dict': cache.dict,
    'last_modified': cache.last_modified,
    'created_at': cache.created_at,
    'expired': cache.expired()
  }
  cache.post_fifo(Event(signal=signals.CACHE, payload=payload))
  cache.post_lifo(Event(signal=signals.read_successful))


valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>210</x>
      <y>1140</y>
      <w>84</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>[cache.writable()]
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>126</x>
      <y>1326</y>
      <w>222</w>
      <h>54</h>
    </coordinates>
    <panel_attributes>chart.post_fifo(
  Event(signal=signals.file_write, payload=e.payload),
  period=random.uniform(0.001, timeout),
  times=1,
  deferred=True)
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>96</x>
      <y>1284</y>
      <w>108</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
file_write</panel_attributes>
    <additional_attributes>10.0;20.0;160.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>192</x>
      <y>1284</y>
      <w>24</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>type=decision</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>246</x>
      <y>1326</y>
      <w>12</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>type=flow_final</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>198</x>
      <y>1302</y>
      <w>60</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>lt=-&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0;80.0;50.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>210</x>
      <y>1290</y>
      <w>228</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=-&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;360.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>216</x>
      <y>1284</y>
      <w>78</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>[cache.writable()]
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>114</x>
      <y>1188</y>
      <w>198</w>
      <h>54</h>
    </coordinates>
    <panel_attributes>chart.post_fifo(
  Event(signal=signals.file_read),
  period=random.uniform(0.001, timeout),
  times=1,
  deferred=True)
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLState</id>
    <coordinates>
      <x>420</x>
      <y>1200</y>
      <w>258</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>*file_write*
--
entry /
  temp_file = cache.temp_file_name()
  f = open(temp_file, "w")
  cache.json = e.payload
  f.write(e.payload)
  # write the file to disk
  f.flush()
  os.fsync(f.fileno())
  f.close()
  # atomic replacement of cache.file_name
  os.rename(temp_file, cache.file_name)
  cache.post_lifo(Event(signal=signals.write_successful))
valign=top
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>672</x>
      <y>1056</y>
      <w>216</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=-&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;340.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>696</x>
      <y>1044</y>
      <w>192</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>&lt;system_read_signal_name(CACHE)&gt; (json)
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>672</x>
      <y>1098</y>
      <w>120</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
read_successful</panel_attributes>
    <additional_attributes>10.0;20.0;180.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>672</x>
      <y>1272</y>
      <w>120</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=-&gt;
write_successful</panel_attributes>
    <additional_attributes>10.0;20.0;180.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>846</x>
      <y>924</y>
      <w>276</w>
      <h>66</h>
    </coordinates>
    <panel_attributes>Event(signal=signals.&lt;system_read_signal_name, default=CACHE&gt;,
 payload = {
  dict:  &lt;cache file contents as dict&gt;
  last_modified: &lt;time_cache_last_modified&gt;
  created_at: &lt;time when cache created&gt;
  expired: &lt;True/False&gt;
 }
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>840</x>
      <y>912</y>
      <w>270</w>
      <h>78</h>
    </coordinates>
    <panel_attributes>The output event:
fg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>816</x>
      <y>984</y>
      <w>84</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;100.0;120.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>480</x>
      <y>756</y>
      <w>204</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>cache_chart = CacheFileChart(live_trace=True)
 
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>480</x>
      <y>738</y>
      <w>204</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>To create cache file chart object:
fg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>366</x>
      <y>762</y>
      <w>126</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;140.0;190.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLGeneric</id>
    <coordinates>
      <x>192</x>
      <y>792</y>
      <w>120</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>symbol=component
Event Processor</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>276</x>
      <y>828</y>
      <w>18</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;30.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>12</x>
      <y>846</y>
      <w>792</w>
      <h>600</h>
    </coordinates>
    <panel_attributes>*CacheFileChart*
--





fg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLSpecialState</id>
    <coordinates>
      <x>48</x>
      <y>1008</y>
      <w>12</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>type=initial</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>48</x>
      <y>1008</y>
      <w>66</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=-&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;90.0;10.0</additional_attributes>
  </element>
  <element>
    <id>PlotGrid</id>
    <coordinates>
      <x>222</x>
      <y>1218</y>
      <w>174</w>
      <h>66</h>
    </coordinates>
    <panel_attributes>// datasets can have optional names set (in this case "first_name")
data first_name
n[0] n[1] n[2] n[3] n[&gt;=4]
0.1 1.3	2.5 3.7 5 

// some settings are global, like the width of the grid

data
a	b	c d
1	2	3 4

// A variable which is on it's own line is valid for every following plot
type=auto
colors=auto
plot</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>288</x>
      <y>1212</y>
      <w>42</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>timeout:
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>1416</x>
      <y>456</y>
      <w>174</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>CACHE(e)
chart.cache.dict = e.payload['dict']
chart.cache.expired = e.payload['expired']
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>1626</x>
      <y>468</y>
      <w>108</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>
[chart.cache.expired]
style=wordwrap</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>102</y>
      <w>648</w>
      <h>564</h>
    </coordinates>
    <panel_attributes>*RabbitConsumerScoutChart*
--





fg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>66</x>
      <y>84</y>
      <w>18</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;30.0</additional_attributes>
  </element>
</diagram>
